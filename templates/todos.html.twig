{% extends '/base.html.twig' %}

{% block head_extra %}
    <meta http-equiv="refresh" content="1800"> {# se recarga cada 60 segundos #}
{% endblock %}
{% block body %}

    <script >
        let ciudades =[];


        document.addEventListener("DOMContentLoaded", function() {


        });



        function enviaDatos (id, fecha, mag,lat,long,informe,epi) {
            var theForm, newInput1, newInput2, newInput3, newInput4, newInput5,newInput6,newInput7;
            // Start by creating a <form>
            theForm = document.createElement('form');
            theForm.action = 'informe/';
            theForm.method = 'post';
            // Next create the <input>s in the form and give them names and values
            newInput1 = document.createElement('input');
            newInput1.type = 'hidden';
            newInput1.name = 'id';
            newInput1.value = id;
            newInput2 = document.createElement('input');
            newInput2.type = 'hidden';
            newInput2.name = 'fecha';
            newInput2.value = fecha;
            newInput3 = document.createElement('input');
            newInput3.type = 'hidden';
            newInput3.name = 'mag';
            newInput3.value = mag;
            newInput4 = document.createElement('input');
            newInput4.type = 'hidden';
            newInput4.name = 'lat';
            newInput4.value = lat;
            newInput5 = document.createElement('input');
            newInput5.type = 'hidden';
            newInput5.name = 'long';
            newInput5.value = long;
            newInput6 = document.createElement('input');
            newInput6.type = 'hidden';
            newInput6.name = 'informe';
            newInput6.value = informe;
            newInput7 = document.createElement('input');
            newInput7.type = 'hidden';
            newInput7.name = 'epi';
            newInput7.value = epi;
            // Now put everything together...
            theForm.appendChild(newInput1);
            theForm.appendChild(newInput2);
            theForm.appendChild(newInput3);
            theForm.appendChild(newInput4);
            theForm.appendChild(newInput5);
            theForm.appendChild(newInput6);
            theForm.appendChild(newInput7);
            // ...and it to the DOM...
            document.getElementById('hidden_form_container').appendChild(theForm);
            // ...and submit it
            theForm.submit();
        }
        </script>

    <div class="container-fluid" xmlns="http://www.w3.org/1999/html">




        <div class="row">
        </div>
        <div class="row">
            <br><br><h2 align="center">
                <a href="{{ path('homepage') }}" class="badge badge-pill badge-primary"> Sismos con Informe </a>
                <a href="{{ path('todos') }}" class="badge badge-pill badge-danger"> Todos los Sismos</a></h2><br>
            <div class="col">
            </div>
        </div>
        <div class="row">
            <div class="col-4">

                <div class="bs-example" data-example-id="contextual-table">
                    <table class="table table-bordered table-hover table-condensed table-sm table-striped" id="tabla_todos" style="font-size: 12px !important;
                                                                                                                     height: 32px !important;
                                                                                                                    min-width: 100px !important;
                                                                                                                    padding: 2px 6px !important; ">

                        <thead>
                        <tr>
                            <th>Fecha y Hora (UTC)</th>
                            <th hidden="" >Latitud</th>
                            <th hidden="" >Longitud</th>
                            <th>Magnitud (Mw)</th>
                            <th>Profundidad (m)</th>
                            <th>Epicentro</th>
                           <!-- <th>Acci&oacute;n</th> -->
                        </tr>
                        </thead>
                        <tbody>
                        {% for dato in datos %}

                            <tr class="info" onclick="enviaDatos('{{ dato.idEvento }}','{{ dato.fechaEvento }}','{{ dato.magnitudEvento }}',
                                    '{{ dato.latitudEvento }}','{{ dato.longitudEvento }}','{{ dato.informe }}','{{ dato.epi }}')">
                                <td>{{ dato.fechaEvento }}</td>
                                <td hidden="">{{ dato.latitudEvento | number_format(2, '.', '')}}</td>
                                <td hidden="">{{ dato.longitudEvento | number_format(2, '.', '')}}</td>
                                <td>{{ dato.magnitudEvento | round(1)}}</td>
                                <td>{{ dato.profundidadEvento | round(1)}}</td>
                                <td> {{ dato.epi }} </td>
                            </tr>
                        {% endfor %}

                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-8">
                <div class="row h-100">
                    <div id="map">MAPA</div>
                </div>
            </div>

        </div>
        <div id="hidden_form_container" style="display:none;"></div>

        <div class="row">

            <br><br><br><br>
            <div class="col">

            </div>
        </div>

    </div>

    <div class="row">
        <div class="col">

        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {

            let mytabla =$('#tabla_todos').DataTable({
                responsive: false,
                retrieve: true,
                paging: true,       // Habilita paginación
                ordering: true,
                order: [[0, "desc"],],
                lengthMenu: [20, 40, 60], // Opciones de cantidad de filas por página
                pageLength: 20,      // Número de filas por defecto
                language: {
                    processing: "En curso...",
                    search: "Buscar:",
                    paginate: {
                        first: "Primero",
                        previous: "Anterior",
                        next: "Siguiente",
                        last: "Último"
                    },
                },
            });

            // Inicializar el mapa centrado en una posición predeterminada
            var map = L.map('map').setView([0, 0], 2);
            let bounds = L.latLngBounds([7.886, -84.409],   // Suroeste (SW)
                [11.019, -82.976])   // Noreste (NE)));
            map.fitBounds(bounds);

            // Agregar capa de mapa base
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);
            L.control.scale().addTo(map);

            //matriz con marcadores
            let marcadores ={};



            // Lista de puntos en formato Twig
            var puntos = [
                {% for dato in datos | slice (0,60) %}
                { lat: {{ dato.latitudEvento }}, lng: {{ dato.longitudEvento }},
                    datos: `Fecha: {{ dato.fechaEvento|date('Y-m-d', false) }} <br>
                            Hora: {{ dato.fechaEvento|date('H:i:s', 'UTC') }} (UTC) - {{ dato.fechaEvento|date('H:i:s', 'America/Costa_Rica') }} (Local)<br>
                Magnitud: {{ dato.magnitudEvento | round(1) }}<br>
                <button onclick="enviaDatos('{{ dato.idEvento }}','{{ dato.fechaEvento }}','{{ dato.magnitudEvento }}',
                                    '{{ dato.latitudEvento }}','{{ dato.longitudEvento }}','{{ dato.informe }}','{{ dato.epi }}')">Mostrar</button>`,
                    mag: {{ dato.magnitudEvento }}, index: {{ loop.index0 }}}
                {% if not loop.last %},{% endif %}
                {% endfor %}
            ];


            // Dibujar los puntos en el mapa
            puntos.forEach(function(punto) {
                i = 0;
                let marker = L.circleMarker([punto.lat, punto.lng], {
                    radius: 8,                 // Tamaño fijo en píxeles
                    color: '#0033cc',          // Color del borde
                    fillColor: '#3399ff',      // Color de relleno sólido
                    fillOpacity: 1,            // Opacidad completa para un color sólido
                    weight: 2                  // Grosor del borde
                }).addTo(map).bindPopup(punto.datos);
                marcadores[punto.index] = marker;
                i++;
                // Cambiar el color cuando el mouse pasa sobre el círculo
                marker.on("mouseover", function () {
                    this.setStyle({ color: "#cc0000", fillColor: "#ff3333", weight: 3 });
                    //this.setStyle({ color: "red", weight: 5 }); // Cambia a rojo con mayor grosor
                });

                // Restaurar el color original cuando el mouse sale
                marker.on("mouseout", function () {
                    this.setStyle({ color: "#0033cc", fillColor: "#3399ff", weight: 2 });
                    //this.setStyle({ color: "blue", weight: 3 }); // Vuelve a azul
                });
            });



            // Centrar el mapa si hay puntos
           /* if (puntos.length > 0) {
                var bounds = L.latLngBounds(puntos.map(p => [p.lat, p.lng]));
                map.fitBounds(bounds);
            }*/


            $('#tabla_todos> tbody').on('mouseenter', 'tr', function () {
                let index = mytabla.row(this).index();
                //alert(mytabla.row(this).index());
                if (marcadores[index]) {
                    marcadores[index].setStyle({ color: "red", fillColor: "red" });
                }
                $(this).addClass("highlight");
            });

            $('#tabla_todos tbody').on('mouseleave', 'tr', function () {
                let index = mytabla.row(this).index();
                if (marcadores[index]) {
                    marcadores[index].setStyle({ color: "#0033cc", fillColor: "#3399ff", weight: 2 });
                }
                $(this).removeClass("highlight");
            });
        });
    </script>
    <script>

    </script>


{% endblock %}